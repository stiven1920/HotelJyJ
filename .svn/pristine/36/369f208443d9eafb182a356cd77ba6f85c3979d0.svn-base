/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import com.toedter.calendar.JDateChooser;
import controlador.CtlHabitacion;
import controlador.CtlMultas;
import controlador.CtlReserva;
import excepciones.ExistenReservasHuespedException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import modelo.Habitacion;
import modelo.Multa;
import modelo.Reserva;
import static vista.PrincipalVista.PanelVista;
import static vista.PrincipalVista.ventanaActual;

/**
 *
 * @author Jopcion
 */
public class HacerReservaVista extends javax.swing.JInternalFrame {

    /**
     * Creates new form Reserva
     */
    private int idHabitacion;
    private CtlHabitacion controlHabitacion;
    private CtlReserva controlReserva;
    private CtlMultas controlMultas;
    private int cedula;

    public HacerReservaVista() {
        initComponents();
        this.setTitle("RESERVA");
        setVisible(true);
        setMaximizable(false);
        setIconifiable(true);
        setClosable(true);
        setResizable(true);
        Date date = new Date();
        DateFormat hourdateFormat = new SimpleDateFormat("dd/MM/yyyy " + " HH:mm:ss");
        lblFecha.setText(hourdateFormat.format(date));
        controlHabitacion = new CtlHabitacion();
        controlReserva = new CtlReserva();
        controlMultas = new CtlMultas();
    }

    public HacerReservaVista(int idHabitacion) {
        initComponents();
        this.setTitle("RESERVA");
        setVisible(true);
        setMaximizable(false);
        setIconifiable(true);
        setClosable(true);
        setResizable(true);
        Date date = new Date();
        DateFormat hourdateFormat = new SimpleDateFormat("dd/MM/yyyy " + " HH:mm:ss");
        lblFecha.setText(hourdateFormat.format(date));
        this.idHabitacion = idHabitacion;
        controlHabitacion = new CtlHabitacion();
        controlReserva = new CtlReserva();
        txtIdHabitacion.setText(idHabitacion + "");
        txtIdHabitacion.setEnabled(false);
        controlMultas = new CtlMultas();
    }

    public HacerReservaVista(int idHabitacion, int cedula) {
        initComponents();
        this.setTitle("RESERVA");
        setVisible(true);
        setMaximizable(false);
        setIconifiable(true);
        setClosable(true);
        setResizable(true);
        Date date = new Date();
        DateFormat hourdateFormat = new SimpleDateFormat("dd/MM/yyyy " + " HH:mm:ss");
        lblFecha.setText(hourdateFormat.format(date));
        this.idHabitacion = idHabitacion;
        controlHabitacion = new CtlHabitacion();
        controlReserva = new CtlReserva();
        txtIdHabitacion.setText(idHabitacion + "");
        txtIdHabitacion.setEnabled(false);
        this.cedula = cedula;
        controlMultas = new CtlMultas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        fechaInicio = new com.toedter.calendar.JDateChooser();
        fechaFinal = new com.toedter.calendar.JDateChooser();
        btnReserva = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtIdHabitacion = new javax.swing.JTextField();
        btnVerReservas = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("RESERVA");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 0, 254, 69));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/reservation.png"))); // NOI18N
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 20, 60, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 640, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setForeground(new java.awt.Color(238, 112, 82));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, 259, 133));

        lblFecha.setBackground(new java.awt.Color(0, 0, 0));
        lblFecha.setForeground(new java.awt.Color(51, 51, 255));
        jPanel2.add(lblFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 300, 130, 30));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/HoraActual.png"))); // NOI18N
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 250, 40, 50));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel4.setText("Tiempo de su reserva");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 140, -1));
        jPanel2.add(txtApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 110, -1));
        jPanel2.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 110, -1));

        jLabel7.setBackground(new java.awt.Color(238, 112, 82));
        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel7.setText("Nombre:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, -1, -1));

        jLabel8.setBackground(new java.awt.Color(238, 112, 82));
        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel8.setText("Apellido:");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        jLabel9.setBackground(new java.awt.Color(238, 112, 82));
        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel9.setText("Fecha de inicio:");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 176, -1, -1));

        jLabel10.setBackground(new java.awt.Color(238, 112, 82));
        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel10.setText("Fecha final:");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, -1, 20));
        jPanel2.add(fechaInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 196, 120, -1));
        jPanel2.add(fechaFinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(202, 196, 120, -1));

        btnReserva.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnReserva.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Reserva.png"))); // NOI18N
        btnReserva.setText("Reservar");
        btnReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReservaActionPerformed(evt);
            }
        });
        jPanel2.add(btnReserva, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, -1, -1));

        jLabel11.setBackground(new java.awt.Color(238, 112, 82));
        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel11.setText("Id Habitacion:");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, -1, -1));
        jPanel2.add(txtIdHabitacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 80, -1));

        btnVerReservas.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnVerReservas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Lista.png"))); // NOI18N
        btnVerReservas.setText("Mis reservas");
        btnVerReservas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerReservasActionPerformed(evt);
            }
        });
        jPanel2.add(btnVerReservas, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 370, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 640, 420));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReservaActionPerformed
        if (txtNombre.getText().isEmpty() || txtApellido.getText().isEmpty() || fechaInicio.getDateEditor().getDate() == null || fechaFinal.getDateEditor().getDate() == null) {
            JOptionPane.showMessageDialog(this, "debe ingresar todos los datos correctamente");
        } else {
            if (txtIdHabitacion.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "No ha ingresado la habitacion debe seleccionarla");
            } else {
                List<Multa> multas = controlMultas.listarMultasReservaHuesped(cedula);
                if (multas.size() > 0) {
                    Multa mul = multas.get(0);
                    JOptionPane.showMessageDialog(this, "tiene una multa de valor: " + mul.getValor() + " debe cancelar para poder seguir haciendo reservas.");
                } else {
                    Habitacion habitacion = controlHabitacion.buscarHabitacion(Integer.parseInt(txtIdHabitacion.getText()));
                    if (habitacion != null) {
                        try {

                            Reserva reserva = new Reserva();
                            reserva.setHabitacionId(Integer.parseInt(txtIdHabitacion.getText()));
                            reserva.setHuespedId(cedula);
                            reserva.setApellidoHuesped(txtApellido.getText());
                            reserva.setNombreHuesped(txtNombre.getText());
                            reserva.setFechaInicio(StringAsqlDate(fechaInicio));
                            reserva.setFechaSalida(StringAsqlDate(fechaFinal));
                            if (InicioMayorActual()) {
                                if (finalMayorInicio()) {
                                    if (controlReserva.guardar(reserva)) {
                                        JOptionPane.showMessageDialog(this, "se guardo con exito al reserva");
                                        limpiar();
                                    } else {
                                        JOptionPane.showMessageDialog(this, "error al guardar");
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(this, "la fecha final es menor que la fecha inicio debe cambiar");
                                    fechaFinal.setCalendar(null);
                                }
                            } else {
                                JOptionPane.showMessageDialog(this, "la fecha inicio es menor que la fecha actual debe cambiar");
                                fechaInicio.setCalendar(null);
                            }
                        } catch (ExistenReservasHuespedException ex) {
                            JOptionPane.showMessageDialog(this, ex.getMessage());
                            limpiar();
                        } catch (Exception ex) {
                            JOptionPane.showMessageDialog(this, ex.getMessage());
                            fechaInicio.setCalendar(null);
                            fechaFinal.setCalendar(null);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "el id de la habitacion ingresada no existe la habitacion");
                        txtIdHabitacion.setText("");
                    }
                }

            }

        }
    }//GEN-LAST:event_btnReservaActionPerformed

    private void btnVerReservasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerReservasActionPerformed
        // TODO add your handling code here:
//         if (ventanaActual == null) {
//            ventanaActual = new ReservasDeHuespedVista();
//            PanelVista.add(ventanaActual);
//        } else {
//            PanelVista.remove(ventanaActual);
//            PanelVista.repaint();
//            ventanaActual = new ReservasDeHuespedVista();
//            PanelVista.add(ventanaActual);
//
//        }
        ReservasDeHuespedVista vista = new ReservasDeHuespedVista(cedula);
        vista.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_btnVerReservasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HacerReservaVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HacerReservaVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HacerReservaVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HacerReservaVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HacerReservaVista().setVisible(true);
            }
        });
    }

    public java.sql.Date StringAsqlDate(JDateChooser fecha) {
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        java.util.Date parsed = null;
        try {
            String a = sdf.format(fecha.getDate());
            parsed = sdf.parse(a);
        } catch (ParseException e1) {
            e1.printStackTrace();
            return null;
        }
        java.sql.Date data = new java.sql.Date(parsed.getTime());
        return data;
    }

    private Date convertirDate(JDateChooser fecha) {
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        java.util.Date parsed = null;
        try {
            String a = sdf.format(fecha.getDate());
            parsed = sdf.parse(a);
        } catch (ParseException e1) {
            e1.printStackTrace();
            return null;
        }
        return parsed;
    }

    private boolean finalMayorInicio() {
        Date inicioF, finalF;
        inicioF = convertirDate(fechaInicio);
        finalF = convertirDate(fechaFinal);

        int r = finalF.compareTo(inicioF);
        if (r >= 0) {
            return true;
        }
        return false;
    }

    private boolean InicioMayorActual() {
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        Date inicioF, actual;
        inicioF = convertirDate(fechaInicio);
        actual = new Date();
        actual.setHours(0);
        actual.setMinutes(0);
        actual.setSeconds(0);
        int r = inicioF.compareTo(actual);
        if (r > 0 || sdf.format(actual).equals(sdf.format(inicioF))) {
            return true;
        }
        return false;
    }

    private void limpiar() {
        txtApellido.setText("");
        txtNombre.setText("");
        fechaInicio.setCalendar(null);
        fechaFinal.setCalendar(null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReserva;
    private javax.swing.JButton btnVerReservas;
    private com.toedter.calendar.JDateChooser fechaFinal;
    private com.toedter.calendar.JDateChooser fechaInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtIdHabitacion;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
